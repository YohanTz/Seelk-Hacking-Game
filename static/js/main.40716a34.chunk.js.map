{"version":3,"sources":["Actions/index.js","Components/Windows/IntroFirst.js","Components/MailInput.js","Components/Windows/IntroSecond.js","Components/Windows/CreateAlert.js","Components/Windows/EditAlert.js","Components/Windows/Windows.js","Components/Icons/Wallet.js","Components/Header.js","Components/Icons/Trash.js","Components/Icons/Pencil.js","Components/AlertTable.js","Components/Alert.js","API/coin.js","App.js","serviceWorker.js","Reducers/Alert.js","Scripts/isValidEmail.js","Reducers/Mail.js","Reducers/WindowDisplayed.js","Reducers/CurrentAlert.js","Reducers/Crypto.js","Reducers/index.js","index.js"],"names":["changeCurrency","currency","type","payload","changeTrigger","trigger","changeAmount","amount","IntroFirst","dispatch","useDispatch","className","onClick","MailInput","placeholder","onChange","elt","target","value","IntroSecond","email","useSelector","state","mail","valid","CreateAlert","alert","currentAlert","cryptoInfos","crypto","map","id","key","asset_id","Math","round","find","price_usd","addAlert","EditAlert","editAlert","Windows","currentWindow","window","alerts","introFirst","introSecond","create","edit","Wallet","width","height","viewBox","fill","xmlns","d","fillRule","Header","Trash","Pencil","AlertTable","length","AlertList","Object","values","some","val","axios","baseURL","headers","Authorization","App","getCryptoData","a","console","log","coin","get","response","cryptos","data","filter","type_is_crypto","undefined","sort","b","useEffect","catch","error","Alert","Boolean","location","hostname","match","alertReducer","action","assign","isValidEmail","test","mailReducer","DEFAULT_STATE","windowReducer","currentAlertReducer","cryptoReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.40716a34.chunk.js","sourcesContent":["export const setEmail = (mail) => {\n    return {\n        type: 'SET_MAIL',\n        payload: mail,\n    }\n}\n\nexport const goSecondWindow = () => {\n    return {\n        type: 'INTRO_SECOND_WINDOW'\n    }\n}\n\nexport const goCreateWindow = () => {\n    return {\n        type: 'CREATE_WINDOW'\n    }\n}\n\nexport const goEditWindow = id => {\n    return {\n        type: 'EDIT_WINDOW',\n        payload: id\n    }\n}\n\nexport const removeWindow = () => {\n    return {\n        type: 'NO_WINDOW'\n    }\n}\n\nexport const changeCurrency = currency => {\n    return {\n        type: 'CHANGE_CURRENCY',\n        payload: currency \n    }\n}\n\nexport const changeTrigger= trigger => {\n    return {\n        type: 'CHANGE_TRIGGER',\n        payload: trigger\n    }\n}\n\nexport const changeAmount = amount => {\n    return {\n        type: 'CHANGE_AMOUNT',\n        payload: amount \n    }\n}\n\nexport const setCurrentAlert = (alert) => {\n    return {\n        type: 'SET',\n        payload: alert\n    }\n}\n\nexport const resetCurrentAlert = () => {\n    return {\n        type: 'RESET'\n    }\n}\n\nexport const addAlert = alert => {\n    return {\n        type: 'ADD_ALERT',\n        payload: alert\n    }\n}\n\nexport const editAlert = alert => {\n    return {\n        type: 'EDIT_ALERT',\n        payload: alert\n    }\n}\n\nexport const deleteAlert = id => {\n    return {\n        type: 'DELETE_ALERT',\n        payload: id \n    }\n}\n\nexport const updateCryptoInfos = infos => {\n    return {\n        type: 'UPDATE_INFOS',\n        payload: infos\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { goSecondWindow } from '../../Actions';\n\nconst IntroFirst = () => {\n    const dispatch = useDispatch();\n    return (\n        <div className=\"windowContainer\">\n            <div>\n                <h1>Welcome!</h1>\n                <p>\n                    This Web app has been made to help you set mail alerts to know when\n                    the value of your favorite Crypto reach a certain point or move suddenly.\n                </p>\n                <br />\n                <p>\n                    We will chech every minutes if the conditions that you entered has been validated\n                    to send you the mail alert.\n                </p>\n                <button onClick={() => dispatch(goSecondWindow())}>Next</button>\n            </div>\n        </div>\n    )\n}\n\nexport default IntroFirst;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setEmail } from '../Actions';\n\nconst MailInput = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                onChange={elt => dispatch(setEmail(elt.target.value))}\n            >\n            </input>\n        </div>\n    )\n}\n\nexport default MailInput;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeWindow } from '../../Actions';\nimport MailInput from '../MailInput';\n\nconst IntroSecond = () => {\n    const dispatch = useDispatch();\n    const email = useSelector(state => state.mail);\n\n    return (\n        <div className=\"windowContainer\">\n            <div>\n                <h1>Enter your email!</h1>\n                <p>We need your email to send you the crypto alerts!</p>\n                <MailInput />\n                { email.valid\n                    ? null\n                    : <p>Enter a valid email!</p> }\n                <button\n                    type=\"submit\"\n                    onClick={() => {\n                        if (email.valid)\n                            dispatch(removeWindow());\n                    }}\n                >\n                    Start!\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default IntroSecond;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeWindow, changeCurrency, changeTrigger, changeAmount, addAlert, resetCurrentAlert } from '../../Actions';\n\nconst CreateAlert = () => {\n    const alert = useSelector(state => state.currentAlert);\n    const cryptoInfos = useSelector(state => state.crypto);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"windowContainer\">\n            <div>\n                <h1>Create a new Alert</h1>\n                <div>\n                    <p>Choose your Cryptocurrency:</p>\n                    <select onChange={elt => dispatch(changeCurrency(elt.target.value))}>\n                        { cryptoInfos.map((crypto, id) => (\n                            <option\n                                key={id}\n                                value={crypto.asset_id}\n                            >\n                                {crypto.asset_id}\n                            </option>\n                        ))}\n                    </select>\n                    Current Price:\n                    {\n                        Math.round(cryptoInfos.find(crypto =>\n                        crypto.asset_id === alert.currency).price_usd * 1000) / 1000\n                    } $\n                </div>\n                <p>Alert me when</p>\n                <div className=\"conditionContainer\">\n                    {alert.currency} \n                    <select onChange={elt => dispatch(changeTrigger(elt.target.value))}>\n                        <option value=\"<\">Falls Under</option>\n                        <option value=\">\">Is Above</option>\n                    </select>\n                    <input\n                        value={alert.amount}\n                        onChange={elt => dispatch(changeAmount(elt.target.value))}\n                        type=\"number\"\n                    >\n                    </input> $\n                </div>\n                <button\n                    onClick={() => {\n                        dispatch(addAlert(alert));\n                        dispatch(resetCurrentAlert());\n                        dispatch(removeWindow());\n                    }}\n                >\n                    Create!\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateAlert;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeWindow, changeCurrency, changeTrigger, changeAmount, editAlert, resetCurrentAlert } from '../../Actions';\n\nconst EditAlert = () => {\n    const alert = useSelector(state => state.currentAlert);\n    const cryptoInfos = useSelector(state => state.crypto);\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"windowContainer\">\n            <div>\n                <h1>Edit your Alert n {alert.id}</h1>\n                <div>\n                    <p>Choose your Cryptocurrency:</p>\n                    <select value={alert.currency} onChange={elt => dispatch(changeCurrency(elt.target.value))}>\n                        { cryptoInfos.map((crypto, id)=> (\n                            <option key={id} value={crypto.asset_id}>{crypto.asset_id}</option>\n                        ))}\n                    </select>\n                    Current Price: {Math.round(cryptoInfos.find(crypto => crypto.asset_id === alert.currency).price_usd * 1000) / 1000}\n                </div>\n                <p>Alert me when</p>\n                <div className=\"conditionContainer\">\n                    {alert.currency} \n                    <select value={alert.trigger} onChange={elt => dispatch(changeTrigger(elt.target.value))}>\n                        <option value=\"<\">Falls Under</option>\n                        <option value=\">\">Is Above</option>\n                    </select>\n                    <input\n                        value={alert.amount}\n                        onChange={elt => dispatch(changeAmount(elt.target.value))}\n                        type=\"number\"\n                    >\n                    </input> $\n                </div>\n                <button\n                    onClick={() => {\n                        dispatch(editAlert(alert));\n                        dispatch(resetCurrentAlert());\n                        dispatch(removeWindow());\n                    }}\n                >\n                    Create!\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditAlert;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IntroFirst from './IntroFirst';\nimport IntroSecond from './IntroSecond';\nimport CreateAlert from './CreateAlert';\nimport EditAlert from './EditAlert';\nimport { setCurrentAlert } from '../../Actions';\n\nconst Windows = () => {\n    const currentWindow = useSelector(state => state.window);\n    const alerts = useSelector(state => state.alert);\n    const dispatch = useDispatch();\n\n    var window = null;\n    if (currentWindow.introFirst)\n        window = <IntroFirst />\n\n    else if (currentWindow.introSecond)\n        window = <IntroSecond />\n\n    else if (currentWindow.create)\n        window = <CreateAlert />;\n\n    else if (currentWindow.edit) {\n        dispatch(setCurrentAlert(alerts.find(elt => elt.id === currentWindow.id)));\n        window = <EditAlert id={currentWindow.id}/>;\n    }\n\n    else\n        window = null;\n\n    return window;\n}\n\nexport default Windows;","import React from 'react';\n\nconst Wallet = () => {\n    return (\n        <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-wallet2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M2.5 4l10-3A1.5 1.5 0 0 1 14 2.5v2h-1v-2a.5.5 0 0 0-.5-.5L5.833 4H2.5z\" />\n            <path fillRule=\"evenodd\" d=\"M1 5.5A1.5 1.5 0 0 1 2.5 4h11A1.5 1.5 0 0 1 15 5.5v8a1.5 1.5 0 0 1-1.5 1.5h-11A1.5 1.5 0 0 1 1 13.5v-8zM2.5 5a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-11z\" />\n        </svg>\n    )\n}\n\nexport default Wallet;","import React from 'react';\nimport Wallet from './Icons/Wallet';\n\nconst Header = () => {\n    return (\n        <header>\n            <Wallet />\n            <h3>Seelk hackaton project</h3>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Trash = ({onClick}) => {\n  return (\n    <svg onClick={() => onClick()} width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n      <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n    </svg>\n  )\n}\n\nexport default Trash;","import React from 'react';\n\nconst Pencil = ({onClick}) => {\n    return (\n        <svg onClick={() => onClick()} width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\" />\n            <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\" />\n        </svg>\n    )\n}\n\nexport default Pencil;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteAlert, goEditWindow } from '../Actions';\nimport Trash from './Icons/Trash';\nimport Pencil from './Icons/Pencil';\n\nconst AlertTable = () => {\n    const alerts = useSelector(state => state.alert);\n    const cryptoInfos = useSelector(state => state.crypto);\n    const dispatch = useDispatch();\n\n    return (\n        <table className=\"alertTable\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Cryptocurrency</th>\n                    <th>Current value</th>\n                    <th>Alert When</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {alerts.length === 0 ? <tr><td>No alerts for the moment</td></tr> : null}\n                {\n                    alerts.map(alert => (\n                        <tr key={alert.id}>\n                            <td>{alert.id}</td>\n                            <td>{alert.currency}</td>\n                            <td>{Math.round(cryptoInfos\n                                .find(elt => elt.asset_id === alert.currency).price_usd * 1000) / 1000 + ' $'}</td>\n                            <td>{`${alert.trigger} ${alert.amount} $`}</td>\n                            <td>\n                                <Trash onClick={() => dispatch(deleteAlert(alert.id))} />\n                                <Pencil onClick={() => dispatch(goEditWindow(alert.id))} />\n                            </td>\n                        </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n    )\n}\n\nexport default AlertTable;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { goCreateWindow } from '../Actions';\nimport AlertTable from './AlertTable';\n\nconst AlertList = () => {\n    const currentWindow = useSelector(state => state.window)\n    const dispatch = useDispatch();\n\n    if (Object.values(currentWindow).some(val => val !== false))\n        return null;\n\n    return (\n        <div>\n            <h2>My crypto alerts: </h2>\n            <div>\n                <AlertTable />\n                <button onClick={() => dispatch(goCreateWindow())}>Create new alert</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AlertList;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"https://rest.coinapi.io/v1/assets\",\n    headers: {\n        Authorization: 'X-CoinAPI-Key: FB8608F1-B2E6-48F0-900C-E1AC308C11B2'\n    }\n});","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateCryptoInfos } from './Actions'\nimport Windows from './Components/Windows/Windows';\nimport Header from './Components/Header';\nimport AlertList from './Components/Alert';\nimport coin from './API/coin';\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const getCryptoData = async () => {\n    console.log('API Call!');\n    const response = await coin.get();\n    const cryptos = response.data.filter(elt => elt.type_is_crypto === 1 && elt.price_usd !== undefined);\n\n    cryptos.sort(function (a, b) {\n      if (a.asset_id < b.asset_id)\n        return -1;\n      if (a.asset_id > b.asset_id)\n        return 1;\n      return 0;\n    });\n    console.log(cryptos);\n    dispatch(updateCryptoInfos(cryptos));\n  }\n\n  useEffect(() => {\n    getCryptoData().catch(error => console.log('Error: ', error));\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n      <Header />\n      <AlertList />\n      <Windows />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const alertReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ALERT':\n            action.payload.id = state.length + 1;\n            return [...state, Object.assign({}, action.payload)];\n        case 'DELETE_ALERT':\n            return state\n                .filter(alert => alert.id !== action.payload)\n                .map((alert, id) => Object.assign({}, alert, {\n                    id: id + 1\n                }));\n        case 'EDIT_ALERT':\n            return state.map(alert => {\n                return (alert.id === action.payload.id)\n                    ? action.payload\n                    : alert;\n            });\n        default:\n            return state;\n    }\n}\n\nexport default alertReducer;","const isValidEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nexport default isValidEmail;","import isValidEmail from '../Scripts/isValidEmail';\n\nconst mailReducer = (state = {mail: '', valid: false}, action) => {\n    switch (action.type) {\n        case 'SET_MAIL':\n            return { mail: action.payload, valid: isValidEmail(action.payload) }\n\n        default:\n            return state;\n    }\n}\n\nexport default mailReducer;","let DEFAULT_STATE = {introFirst: true, introSecond: false, create: false, edit: false}\n\nconst windowReducer = (state = DEFAULT_STATE, action) => {\n    switch (action.type) {\n        case 'INTRO_FIRST_WINDOW':\n            return DEFAULT_STATE;\n        case 'INTRO_SECOND_WINDOW':\n            return {introFirst: false, introSecond: true, create: false, edit: false};\n        case 'CREATE_WINDOW':\n            return {introFirst: false, introSecond: false, create: true, edit: false};\n        case 'EDIT_WINDOW':\n            return {introFirst: false, introSecond: false, create: false, edit: true, id: action.payload};\n        case 'NO_WINDOW':\n            return {introFirst: false, introSecond: false, create: false, edit: false};\n        default:\n            return state;\n    }\n}\n\nexport default windowReducer;","let DEFAULT_STATE = {currency: '$BITC', trigger: '<', amount: 0}\n\nconst currentAlertReducer = (state = Object.assign({}, DEFAULT_STATE), action) => {\n    switch (action.type) {\n        case 'CHANGE_CURRENCY':\n            return Object.assign({}, state, {\n                currency: action.payload\n            });\n        case 'CHANGE_TRIGGER':\n            return Object.assign({}, state, {\n                trigger: action.payload\n            });\n        case 'CHANGE_AMOUNT':\n            return Object.assign({}, state, {\n                amount: action.payload\n            });\n        case 'SET':\n            return Object.assign({}, action.payload);\n        case 'RESET':\n            return Object.assign({}, DEFAULT_STATE);\n        default:\n            return state;\n    }\n}\n\nexport default currentAlertReducer;","const cryptoReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'UPDATE_INFOS':\n            return action.payload;\n\n        default:\n            return state;\n    }\n}\n\nexport default cryptoReducer;","import alertReducer from './Alert';\nimport mailReducer from './Mail';\nimport windowReducer from './WindowDisplayed';\nimport currentAlertReducer from './CurrentAlert';\nimport cryptoReducer from './Crypto';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    currentAlert: currentAlertReducer,\n    alert: alertReducer,\n    mail: mailReducer,\n    window: windowReducer,\n    crypto: cryptoReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './Reducers';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}